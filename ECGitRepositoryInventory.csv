ProjectName,content type,repositoryName,html_url,Organization,description,Participants,pushed_at,git_url,,
Enabling Scientific Collaboration project,project management,2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930,https://github.com/NCAR/2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930,EarthCube Enabling Collaboration,EarthCube Building Blocks Grant Enabling Scientific Collaboration NSF#1440293. See also: http://workspace.earthcube.org/enabling-scientific-collaboration-and-discovery-through-semantic-connections.  0 Releases.,"Ben gneissone, hudajkhan, kmaull-ucar, Matt Mayernik, C. Brooks Snyder, John J. Allison",2018-07-12T20:39:57Z,git://github.com/NCAR/2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930.git,,
Enabling Scientific Collaboration: UNAVCO VIVO project template,Deployed application,2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930-vivo-source,https://github.com/NCAR/2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930-vivo-source,EarthCube Enabling Collaboration project,"Three-tier build for EarthCollab VIVO. This is a git repository template for working with and customizing VIVO. It uses the three tiered build approach (https://wiki.duraspace.org/display/VIVO/Building+VIVO+in+3+tiers)  documented by the VIVO project. The project source files (VIVO and Vitro) are tracked using Git Submodules. For a more detailed explanation of setting up the VIVO environment, consult the VIVO version 1.8.1 installation instructions (https://wiki.duraspace.org/display/VIVO/Installing+VIVO+release+1.8.1).  Building VIVO from this template will add UNAVCO-specific customizations.  0 Releases.","Ben gneissone, Ted Lawless",2018-07-25T22:55:52Z,git://github.com/NCAR/2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930-vivo-source.git,,
Accelerating Scientific workflowS using EarthCube Technologies,None,ASSET,https://github.com/NCAR/ASSET,,This is the Github site for the Accelerating Scientific workflowS using EarthCube Technologies (ASSET) project,Mike Daniels,2018-10-29T22:25:40Z,git://github.com/NCAR/ASSET.git,,
CyberConnector project,Deployed application,cc,https://github.com/CSISS/cc,EarthCube CyberConnector,NSF EarthCube CyberConnector; NSF EarthCube Building Block project.  This project aims to connect the existing data sources to the Earth science models so the generation of modeling products could be more automatic and effortless. 31 Releases.  Documentation https://csiss.github.io/cc/.  Project web site http://cube.csiss.gmu.edu/CyberConnector,"Juozas Gaigalas, Ziheng Sun, Sreten Cvetojevic",2021-06-04T01:47:55Z,git://github.com/CSISS/cc.git,,
CyberConnector Simplified,application,cc-thredds-pycsw,https://github.com/CSISS/cc-thredds-pycsw,EarthCube CyberConnector,"Simplified CyberConnector/CyberWay repository for THREDDS, pycsw, docker system. 1 Release. No documentation",Juozas Gaigalas,5/23/2019,https://github.com/CSISS/cc-thredds-pycsw.git,,
EarthCube CDF Registry Working Group,Specification development,CDFRegistryWG,https://github.com/fils/CDFRegistryWG,EarthCube Council of Data Facilities,"EarthCube CDF Registry Working Group on self hosted facility metadata via HTML5 microdata. Goals are to use existing vocabularies like schema.org and re3data terms to expose facility metadata using web architecture patterns, leverage HTML5 microdata publishing,  JSON-LD, and standard web architecture (hypermedia) to both expose and collect metadata.  0 Releases. Note: see https://github.com/ESIPFed/science-on-schema.org for current activity related to these objectives","Doug Fils, Adam Shepherd",2019-04-23T20:01:19Z,git://github.com/fils/CDFRegistryWG.git,,
GeoCODES Gleaner harvest data graphs,data,CDFSemanticNetwork,https://github.com/earthcubearchitecture-project418/CDFSemanticNetwork,EarthCube GeoCODES,A Semantic Network built from the structured data on the web offerings of the EarthCube CDF members; This repository is an experiment. It holds the output of GeoCODES Gleaner runs done on the various repositories that make up the EarthCube Council of Data Facilities (CDF). runs/CDFSemNetD1 and runs/CDFSemNetD2 hold gzipped archives of rdf triples (N3 encoding) for resources descriptions from harvested CDF repositories.  Other directories contains scripts for running the harvest processes with Gleaner. 0 Releases.,Doug Fils,2020-01-27T18:19:03Z,git://github.com/earthcubearchitecture-project418/CDFSemanticNetwork.git,,
cf-xarray,Notebook,cf-xarray-earthcube,https://github.com/malmans2/cf-xarray-earthcube,,"notebook to demonstrate the use of cf-xarray to build an analysis pipeline that works on a wide variety of cloud-available datasets such as the CMIP6 archive, the CESM Large Ensemble, various satellite datasets, and that uses xESMF to regrid this wide variety of datasets to a common grid to facilitate analysis of anomalies.","Mattia Almansi, Pascal Bourgault, Deepak Cherian",2021-05-14T16:39:00Z,git://github.com/malmans2/cf-xarray-earthcube.git,,
CHORDS application code,Deployed application,chords,https://github.com/earthcubeprojects-chords/chords,EarthCube CHORDS project,"EarthCube CHORDS application code. Website: http://chordsrt.com/. The CHORDS wiki (https://github.com/NCAR/chords_portal/wiki) has lots of nitty-gritty information.  Implemented with Ruby; also containerized distribution. 23 releases.  Contains code for  CHORDS Portal web application. Functionality: --A home page, with a logo and some areas for project definition and customization. --A query that can receive a tupple of data, and ingest it into the database. --A query that can return data from the database. --A webpage that can navigate and show data in a tabular form, and perhaps deliver a CSV file. --A webpage that provides a URL builder, than can be used immediately, and used as a template for client applications. --A webpage which provides a summary of the current data holdings and ingest activity.","Mike Daniels; code committers: Charlie Martin, Mike Dye, terrieyang, Aaron Zastruga, Sophia Chen, intRobyn",2021-10-12T18:34:29Z,git://github.com/earthcubeprojects-chords/chords.git,,
CHORDS project web documentation,documentation,chords-docs,https://github.com/earthcubeprojects-chords/chords-docs,EarthCube CHORDS project,"EarthCube CHORDS Web Documentation; The content explains what CHORDS is, how to use use it in new and advanced ways, answer as many user questions as possible, and post any exciting news. The website is published using GitHub Pages, and runs on the Jekyll framework, using the Jekyll Minimal Mistakes Theme. 0 Releases. Published documentation: https://earthcubeprojects-chords.github.io/chords-docs/","Charlie Martin, intRobyn, CrazyCatProgrammer, Mike Dye",2021-09-27T21:58:57Z,git://github.com/earthcubeprojects-chords/chords-docs.git,,
Data Discovery Studio (CINERGI) crawler,application,CINERGIWebCrawler,https://github.com/RockyCal/CINERGIWebCrawler,EarthCube Data Discovery Studio (CINERGI),"Crawler for the EarthCube - CINERGI project to crawl URLS.  This crawler/scraper is meant to gather metadata from earth science resources.  Dependencies are Python 3.4, and the following libraries: xml.etree.ElementTree, urllib.request, urllib.parse, re and bs4. Python code. 0 Releases.","Raquel (Rocky), Anoushka Bose, Nikov Nizh, Sigha ",2015-01-15T20:05:14Z,git://github.com/RockyCal/CINERGIWebCrawler.git,,
GeoCODES GUI client,web site,client,https://github.com/earthcubearchitecture-project418gui/client,EarthCube GeoCODES,"Javascript, CSS code for web application to interact with GUI server for generating new JSON-LD documents using schema.org vocabulary to document EarthCube resources. Some documentation for installation at https://github.com/earthcubearchitecture-project418gui/documentation.  Application uses templates housed at https://github.com/earthcubearchitecture-project418gui/jsonld_templates. See project page at https://www.earthcube.org/p418gui. 0 Releases. No Readme.","Eric Lingerfelt, Alex McNurlan ",9/3/2019,https://github.com/earthcubearchitecture-project418gui/client.git,,
CyberWay project,project management,CyberWay,https://github.com/CSISS/CyberWay,EarthCube CyberWay,"NSF EarthCube Funded Project. The aim is to connect Earth observations, polar science outcomes, and climate model outcomes via the EarthCube architecture. Project duration 10/1/2017-9/30/2019. Repo contains project meeting minutes, annual reports, Web site code(?), .war file for CyberWay.  0 Releases.  Project web site http://cube.csiss.gmu.edu/CyberWay","PI:  Dr. Liping Di;  Co-I: James Kinter,  David Bromwich, Eugene Yu;  Implementation Leader: Ziheng Sun; Organization participation:  GMU CSISS, COLA, OSU Byrd Center; Collaborators:  Michael D. Daniels (NCAR/EOL, Chords), Dr. Mohan Ramamurthy (Unidata, GeoWS)",2019-03-12T15:46:43Z,git://github.com/CSISS/CyberWay.git,,
Critical Zone Integrative Microbial Ecology Activity,documentation; notebooks,CZIMEA,https://github.com/BiG-CZ/CZIMEA,EarthCube CZIMEA Integrative activity,"CZIMEA: Critical Zone Integrative Microbial Ecology Activity. An EarthCube Integrative Activities project that's a BiG-CZ partner. Repo has links to project documents, and Jupyter notebook that loads sampling metadata into CZIMEA ODM2 database, using odm2api. Uses czimea_dataload.py module.  0 Releases. Project appears dormant.","Emilio Mayorga,  Landung Setiawan, Folker Meyer",2021-01-29T23:33:35Z,git://github.com/BiG-CZ/CZIMEA.git,,
GeoLINK harvested DataONE Linked Open Data graph,data,d1lod,https://github.com/ec-geolink/d1lod,EarthCube GeoLink,This repository contains a deployable service that continuously updates the DataOne Linked Open Data graph for its part as a provider of data for the GeoLink project. The service uses Docker Compose to manage a set of Docker containers that run the service. The service is intended to be deployed to a virtual machine and run with Docker Compose. 0 Releases.,"Bryce Mecum, Rushiraj Nenuji, Matt Jones",6/7/2019,https://github.com/ec-geolink/d1lod.git,,
GeoLink Design,project management,design,https://github.com/ec-geolink/design,EarthCube GeoLink,Design information about the EarthCube Geolink project.  See website at http://www.geolink.org/. 0 Releases. No Readme content.,"Adila Krisnadhi, Bryce Mecum, Adam Shepherd, Matt Jones, Peng Ji, Doug Fils, YingJie Hu, Tom Narok, Julie McMurry ",2018-01-04T01:10:03Z,git://github.com/ec-geolink/design.git,,
DRILSDOWN project,application,drilsdown,https://github.com/Unidata/drilsdown,EarthCube DRILSDOWN,"Drawing Rich Integrated Lat-lon- time Samples from Datasets Online into Working Notebooks. DRILSDOWN (Drawing Rich Integrated Lat-lon-time Subsets from Dataservers Online into Working Notebooks) is a project to facilitate access to detailed visualizations (in the Integrated Data Viewer, IDV) of Cases of Interest (user-defined) within a Python-based geo-space x time statistical data analyses -- if the data for such visulaizations are available online in nice aggregated repositories. 1 Release.  Python code, documentation. Documentation at https://unidata.github.io/drilsdown/.","Brian Mapes, Cece Hedrick, Suvarchal Kumar Cheedela, Jeff McWhirter, Yuan Ho",2/18/2020,https://github.com/Unidata/drilsdown.git,,
EarthCube Organization ,project management,earthcube,https://github.com/earthcube/earthcube,EarthCube Office,"Top level repository for EC initiatives. The gh-pages branch contains content for https://earthcube.github.io/earthcube/, and is the default branch for this repository. 0 Releases. ","Stephen Richard, Craig Willis, David Valentine, Kenton McHenry",3/12/2021,git://github.com/earthcube/earthcube.git,,
EarthCube,application,earthcube,https://github.com/chrismattmann/earthcube,Computational Infrastructure for Geodynamics,"A set of scripts to perform information retrieval and crawling of the Computational Infrastructure for Geodynamics website, and to automatically run code analysis on that model repository.  Work sponsored by the National Science Foundation funded project ICER-1343800.","Chris Mattmann, jihyunoh",2015-04-07T05:39:31Z,git://github.com/chrismattmann/earthcube.git,,
2021 EarthCube Annual Meeting,Notebook,earthcube_notebook,https://github.com/yeshancqcq/earthcube_notebook,Macrostrat,A Python notebook for extracting and manipulating Macrostrat data. This notebook is submitted for the 2021 EarthCube Annual Meeting.,Shan Ye,2021-06-29T20:50:55Z,git://github.com/yeshancqcq/earthcube_notebook.git,,
GeoCODES,Notebook,earthcube_utilities,https://github.com/earthcube/earthcube_utilities,EarthCube Office,Utility code for minipulating (meta)data in NoteBooks from GeoCODES search. Code to create parameterized NoteBook gists (from a template) for opening in colab,"Mike Bobak, David Valentine",2021-11-16T05:06:55Z,git://github.com/earthcube/earthcube_utilities.git,,
2020 EarthCube Annual Meeting,Notebook,Earth-Cube-2020,https://github.com/roxyboy/Earth-Cube-2020,EarthCube Office,"Diagnosing submesoscale mode water formation in eNATL60; notebooks to calculate the submesoscale potential vorticity flux terms Mode-water_Jfluxes.ipynb via the parametrization proposed by Wenegrat et al. (2013) to diagnose the relative contribution of surface forcing on mode water formation in the Gulf Stream region. The tidally-forced North Atlantic simulation (eNATL60) we analyze has the horizontal resolution of 1/60 with 300 vertical layers, which allows for well formed mesoscale eddies and partially resolves the submesoscales. The results are plotted in Jflux_outputs.ipynb.",Takaya Uchida,2020-05-13T18:13:02Z,git://github.com/roxyboy/Earth-Cube-2020.git,,
2020 EarthCube Annual Meeting,Notebook,earthcube2020_cloud_storage,https://github.com/rabernat/earthcube2020_cloud_storage,Pangeo,"Example gallery repo for the Pangeo Gallery. It is configured to automatically build itself using binderbot. It is linked, via a git submodule, the the gallery website repo. Whenever the notebooks are updated in this, repository dispatch is used to trigger a gallery rebuild. This keeps gallery.pangeo.io always in sync with this repo.  The repo contains the following elements: -- A set of jupyter notebooks, numbered in the order that we want them to appear on the gallery website; -- A configuration file, binder-gallery.yaml, which provides important configuration parameters (see pangeo gallery documentation); -- A thumbnail image (thumbnail.png), a 200 x 200 px image which represents the gallery content; --Github workflows, which make the magic happen! (Don't touch these.)",Ryan Abernathey ,2020-06-17T13:37:05Z,git://github.com/rabernat/earthcube2020_cloud_storage.git,,
2020 EarthCube Annual Meeting,Notebook,earthcube2020_cmip6_xgcm,https://github.com/jbusecke/earthcube2020_cmip6_xgcm,Pangeo,"ec20_busecke_etal: CMIP6 without the interpolation: Grid-native analysis with Pangeo in the cloud. Demonstrates two pangeo tools which enable seamless calculation of common operations like vector calculus operators (grad, curl, div) and weighted averages/integrals across a wide range of CMIP6 models directly on the data stored in the cloud. cmip6_preprocessing provides numerous tools to unify naming conventions and parse grid information and metrics (like cell area). This information is used by xgcm to enable finite volume analysis on the native model grids. The combination of both tools facilitates fast analysis while ensuring a reproducible and accurate workflow.","Julius Busecke, Ryan Abernathey ",2020-06-15T05:15:44Z,git://github.com/jbusecke/earthcube2020_cmip6_xgcm.git,,
2021 EarthCube Annual Meeting,,EarthCube2021,https://github.com/OGGM/EarthCube2021,Open Global Glacier Model,"OGGM-Edu notebook submitted to the 2021 EarthCube meeting. OGGM-Edu is an educational platform about glaciers, powered by Open Global Glacier Model (OGGM) and MyBinder.  This notebook illustrates how OGGM-Edu can be used to learn and teach about glaciers. ","Fabien Maussion, Erik Holmgren, Lindsey Nicholson, Lizz Ultee, Zora Schirmeister, Patrick Schmitt, Lilian Schuster",2021-06-11T17:54:06Z,git://github.com/OGGM/EarthCube2021.git,,
2021 EarthCube Annual Meeting,Notebook,EarthCube2021,https://github.com/geoedf/EarthCube2021,Extensible Geospatial Data Framework for FAIR ,"GeoEDF EarthCube 2021 Demo Jupyter Notebooks. Contains demonstration of the Geospatial Extensible Data Framework (GeoEDF).  GeoEDF is a Python-based extensible data framework designed to simplify data wrangling in geospatial research workflows. GeoEDF enables researchers to define scientific workflows as a logical sequence of data acquisition and processing steps. Reusable building blocks termed data connectors and data processors implement data acquisition from various repositories using various data access protocols, and a range of domain-agnostic or domain-specific geospatial processing operations respectively. These open source connectors and processors are community contributed and managed in the GeoEDF GitHub repositories. A CI/CD pipeline automatically packages these connectors and processors as Singularity containers in order to manage their respective software dependencies. Researchers can use any of these existing connectors or processors; or else build and contribute their own for use in their workflows or by others.",Rajesh Kalyanam,2021-06-11T17:54:06Z,git://github.com/geoedf/EarthCube2021.git,,
DRILSDOWN project B Mapes,Notebook,EarthCube-DRILSDOWN,https://github.com/brianmapes/EarthCube-DRILSDOWN,EarthCube DRILSDOWN ,"Documentation at https://unidata.github.io/drilsdown/.  DRILSDOWN is a suite of software tools for geo-science (especially meteorology and oceanography). Our goal is to make 3D multi-variable visualization easier and more scientific, through: 1) Plugins, templates, and tools for The Integrated Data Viewer (IDV, an advanced Java application); 2) Jupyter notebook tools connecting The IDV to iPython (or to its own kernel), with ability to capture IDV images and animations, as well as full IDV states for replicability and ability to push and pull digital data between IDV and iPython; 3) RAMADDA repository tools for displaying and publishing DRILSDOWN Case Studies.   Repo contain iPython notebooks. Looks like this is a fork of the unidata repo, last merge was 2018-06-15 then superceded by https://github.com/Unidata/drilsdown. 0 Releases.","Brian Mapes, Suvarchal Kumar Cheedela",2018-06-19T01:20:14Z,git://github.com/brianmapes/EarthCube-DRILSDOWN.git,,
OceanLink project,application,earthcube-EAGER,https://github.com/narock/earthcube-EAGER,EarthCube OceanLink,"Software associated with EarthCube EAGER project (OceanLink??). 	Working version of oceanlink pattern code. Java. 0 Releases. No Readme content.",Tom Narok,2014-05-27T16:57:38Z,git://github.com/narock/earthcube-EAGER.git,,
GeoCODES,Notebook,EarthCubeGraphAnalytics,https://github.com/fils/EarthCubeGraphAnalytics,EarthCube Office,A simple repo holding some notebooks related to doing graph analytics on the EarthCube CDF Graph. This graph is generated by collecting JSON-LD documents from the CDF data facilties via Gleaner.  This is just the start of learning what we might be able to do with some analytics approaches to this graph.  References: https://derwen.ai/docs/kgl/,Doug Fils,2021-05-27T14:47:01Z,git://github.com/fils/EarthCubeGraphAnalytics.git,,
2021 EarthCube Annual Meeting,,Earthcube-Meeting-2021,https://github.com/AMGeO-Collaboration/Earthcube-Meeting-2021,AmGEO,"This notebook showcases the new  Assimilative Mapping of Geospace Observations (AMGeO) API,  intended to further facilitate the ease of use with AMGeO for users with different levels of experience.  AMGeO is a data science tool for the geospace community that combines observations from various sensors into assimilative maps of the high-latitude ionosphere. With the support from the NSF EarthCube program, AMGeO is set out to open up the large amount of information-rich geospace data to a broader audience, while also giving users an access to data analysis tools that help gain meaningful insights from a collection of geospace data.  For more information on AMGeO and how to get started, please visit our website: https://amgeo.colorado.edu/","Liam Kilcommons, Willem Mirkovich",2021-05-26T20:53:21Z,git://github.com/AMGeO-Collaboration/Earthcube-Meeting-2021.git,,
2020 EarthCube Annual Meeting,Notebook,EarthCube-Notebook,https://github.com/cybergis/EarthCube-Notebook,Hydroshare,"Reproducible Hydrological Modeling with CyberGIS-Jupyter For Water (CJW) and HydroShare.  CyberGIS-Jupyter for Water (CJW), leveraging the cyberGIS software ecosystem, is integrated with HydroShare. CJW provides a collaborative platform for enabling computationally intensive and reproducible hydrologic research by delivering advanced cyberinfrastructure and cyberGIS capabilities based on high-performance computing (HPC) resources such as Virtual ROGER and XSEDE Comet. The Structure For Unifying Multiple Modeling Alternatives (SUMMA), which is a hydrological modeling framework, allows for formal evaluation of multiple working hypotheses on model representations of physical processes. This CyberGIS-Jupyter notebook illustrates specific support for a SUMMA model on top of the cutting-edge hydrologic modeling capabilities on CJW. By taking advantage of CJW, users can easily tune different parameters for a SUMMA model and submit computationally intensive High-Throughput Computing (HTC) jobs for executing the model on HPC resources via Jupyter notebooks without having to possess in-depth technical knowledge about cyberGIS or HydroShare. Computational experiments demonstrate that the integration of cyberGIS capabilities and HydroShare achieves a high-performance and easy-to-use environment for reproducible SUMMA-based hydrological modeling.","Fangzheng Lyu, Zhiyu Li, Anand Padmanabhan, Shaowen Wang, Youngdon Choi, Jonathan Goodall, Andrew Bennett, Bart Nijssen, David Tarboton",2020-05-22T18:53:51Z,git://github.com/cybergis/EarthCube-Notebook.git,,
EarthCube investigator networks,Application,EC_Network,https://github.com/SimonGoring/EC_Network,EarthCube Office,"Building a large network for EarthCube related proposals and all NSF grants using neo4j.  This repository is used to build and analyze a large graph database (using neo4j). The intent is to use this database for analysis to examine the impact of EarthCube on investigator networks. There are two components. One to build the database, and one to analyze the constructed database.   Docker, R Markdown, Cyverse, CQL. 0 Releases.",Simon Goring,2017-12-20T22:19:02Z,git://github.com/SimonGoring/EC_Network.git,,
Throughput,template,ec_workshops,https://github.com/throughput-ec/ec_workshops,Throughput,Template for EarthCube-related notebook-construction workshops/hackathons,Socorro Dominguez Vidana,2021-11-04T22:53:52Z,git://github.com/throughput-ec/ec_workshops.git,,
2021 EarthCube Annual Meeting,Notebook,EC2021_autogluon_notebook,https://github.com/sxjscience/EC2021_autogluon_notebook,,"Notebook that demonstrates AutoGluon (Notebook submission to EarthCube 2021). AutoGluon a set of tools to automates machine learning for Text, Image, and Tabular Data, From Amazon Web services labs. With AutoGluon, you can feed in the raw data table and specify the label column. AutoGluon will deliver a model that has reasonable performance in a short period of time. In addition, with AutoGluon, you can also analyze the importance of each feature column with a single line of code. In the following, we illustrate how to use AutoGluon to build machine learning models for two Earth Science problems.  Notebook example  trains a model for Forest Cover Type Prediction and Solar Radiation Prediction. ",Xingjian Shi,2021-05-17T03:15:47Z,git://github.com/sxjscience/EC2021_autogluon_notebook.git,,
2021 EarthCube Annual Meeting,Notebook,ec2021_balwada_etal,https://github.com/dhruvbalwada/ec2021_balwada_etal,,"Interactive visualization tools for ocean glider data. Submission to EarthCube call for notebooks 2021.  Demonstrates how Python’s Holoviz visualization ecosystem (https://holoviz.org/) can be coupled with the glider data analysis toolbox GliderTools (https://glidertools.readthedocs.io) to rapidly generate interactive dashboards to explore glider datasets. The tools and code presentation in the jupyter notebook have been developed with the purpose of ease of use and portability, and they can easily be modified to new datasets and analysis/visualization needs. The resulting datasets contain measurements of physical variables, such as temperature, salinity, velocity, as well as biogeochemical variables, such as oxygen, nutrients, chlorophyll, at scales where the variability is generated by mesoscale and submesoscale flows (1-100 km scales). ","Dhruv Balwada, Scott Henderson, & Alison Gray",2021-06-11T00:29:10Z,git://github.com/dhruvbalwada/ec2021_balwada_etal.git,,
2021 EarthCube Annual Meeting,Notebook,EC2021_Martin_et_al,https://github.com/paigem/EC2021_Martin_et_al,Pangeo,"Frequency-domain analysis of large datasets.  Repo for EarthCube 2021. In this notebook, we show an example workflow for performing frequency-domain analysis on large datasets in the Pangeo Cloud environment. Specifically, we compute the terms in the surface spectral temperature variance budget of a 0.1˚ horizontal resolution global ocean model with daily output. This analysis involves the computation of cross spectra to yield processed data in the frequency (rather than the time) domain. To compute a frequency-domain Fourier transform, we need information from the entire time series and thus cannot work with data that is chunked in time. Hence, this workflow first requires a complete rechunking of the data (using the Rechunker package) from global snapshots to spatially chunked time series. We then compute the Fourier transform on this rechunked data to obtain output in frequency space. Although computationally intensive, we are able to carry out this computation using distributed computing via Dask Gateway and adaptive scaling of the Dask cluster.","Paige Martin, Ryan Abernathy",2021-11-10T04:14:12Z,git://github.com/paigem/EC2021_Martin_et_al.git,,
EarthCube Metrics presentation 2018,Presentation,ECAHM_Metrics,https://github.com/SimonGoring/ECAHM_Metrics,EarthCube Office,"A repository for the EarthCube All Hands Meeting Metrics Presentation; This repository contains a presentation, made using reveal.js for the EarthCube All Hands Meeting in Arlington, VA, June 2018. The presentation can be run using any browser, either by pointing the browser to goring.org, or by cloning the repository and opening the index.html file locally. 0 Releases","Simon Goring, Hakim El Hattab, 
Jens Lechtenbörger, ",2018-10-11T01:37:01Z,git://github.com/SimonGoring/ECAHM_Metrics.git,,
2020 EarthCube Annual Meeting,Notebook,EC-Argovis-API-Demo,https://github.com/tylertucker202/EC-Argovis-API-Demo,ArgoVIS,"Demonstration of Argovis Python API - For Earthcube 2020 meeting. This notebook will guide a python user to:  1. Query a specific profile using its id, designated by its platform (WMO) number with its cycle number, connected by an underscore. For example '3900737_9'      2. Query a specified platform by number. Example '3900737'.   3.1 Query profiles within a given shape, date range, and pressure range.  3.2 Query profiles position, date, and cycle number within month and year (globally).  4. Plot query results  5. Create time series for a selected region and set of dates.   6. Query database using a gridded scheme   7. Overlay Atmospheric Rivers on the map.    Argo  (http://www.argo.ucsd.edu/index.html) is a network of profiling floats that provide real-time data of temperature T, salinity S, and pressure P for the global ocean to a depth of 2000 dbar, with Deep Argo floats going down to 6000-dbar depth. ",Tyler Tucker,2021-08-23T20:44:41Z,git://github.com/tylertucker202/EC-Argovis-API-Demo.git,,
Advancing netCDF-CF Project,Specification development,EC-netCDF-CF,https://github.com/Unidata/EC-netCDF-CF,EarthCube Advancing netCDF-CF for the Geoscience Community,"EarthCube: Advancing netCDF-CF Project. Project goal is to 1) increase the range of geoscience domains using netCDF-CF and active in the community; 2) extend the netCDF-CF standard to support data from a wider range of geoscience domains; and 3) Collaborate with other standards groups such as the OGC, ESIP, RDA, and NASA ESDS.  The project will gather scientific use-cases and example datasets to guide the drafting of documents detailing enhancements to the CF standard. Close collaboration with the existing netCDF-CF community and engagement with new geoscience domains as well as other standards groups will lead to strong community agreement around the proposed enhancements.  Repo contains proposals for CF conventions.  0 releases.","Aleksandar Jelenak, Ethan Davis, dasantek, Charlie Zender, Tim Whiteaker, Ryan May, Daniel Lee",2018-06-19T15:23:27Z,git://github.com/Unidata/EC-netCDF-CF.git,,
EarthCube office Trello scraper,application,ecproject-trello-parser,https://github.com/earthcubearchitecture-ecprojects/ecproject-trello-parser,EarthCube office,"Programming and Database to harvest EC Project information from Trello. Implementation: php, data is in a JSON file. Code extracts content from JSON, and  executes a bunch of SQL to insert data into a database. 0 Releases. No Readme",Eric Lingerfelt,4/2/2018,https://github.com/earthcubearchitecture-ecprojects/ecproject-trello-parser.git,,
Earthcube resource registry ontology (ECCRO),ontology,ecrro,https://github.com/earthcubearchitecture-ecresourcereg/ecrro,EarthCube Office,"EarthCube Resource Registry Ontology; This ontology defines classes for description of information resources documented in the EarthCube Resource Registry.  See https://www.earthcube.org/resource_registry for project information.  Ontology documentation provided by Widico at https://earthcubearchitecture-ecresourcereg.github.io/ecrro/index-en.html.  Includes directories with documentation, OWL encoding, and example instance documents. 2 Releases","Stephen Richard, Ruth Duerr, Ilya Zaslavsky",2020-07-08T00:53:28Z,git://github.com/earthcubearchitecture-ecresourcereg/ecrro.git,,
Ensemble Toolkit (EnTK) experiments for IPDPS 2017,Notebook,entk-experiments,https://github.com/radical-experiments/entk-experiments/,EarthCube Ensemble Toolkit for Earth Sciences,"This repository contains all the EnTK scripts + input data, notebooks, resulting plots. The raw data consisting of all the profiles are kept in the tarballs. All contents of this repository pertain to the work done for the IPDPS 2017 conference. 1 Release.",Vivek Balasubramanian (vivek.balasubramanian@rutgers.edu),12/21/2017,https://github.com/radical-experiments/entk-experiments.git,,
GeoCODES,application,Fence,https://github.com/earthcubearchitecture-project418/fence,EarthCube Office,"Fence is a tool designed to allow people to evaluate structured data graphs against various validations (such at the Tangram SHACL service), tools and interface components. It also provides links to the Google Structured Data Testing Tool and the JSON-LD Playground.  A set of web components are also loaded and attempt to parse the JSON-LD data graph to testing approaches to mapping, citation generation and other views into the data graph. This is done to provide examples of how providers can further leverage their data graphs in the generation of data set landing pages. 0 Releases.",Doug Fils,3/19/2020,https://github.com/earthcubearchitecture-project418/fence.git,,
Digital Crust ScienceBase file picker,application,file-picker,https://github.com/digitalcrust/file-picker,EarthCube Digital Crust,"Picks files from ScienceBase Catalog to move files to AWS S3,  send through a processing pipeline.  Built using example in redux docs: http://rackt.github.io/redux/docs/advanced/ExampleRedditAPI.html.  Project based on: https://github.com/gaearon/react-transform-boilerplate.  Javascript, Dockerfiles.  0 Releases.",Derek J. Williams,4/14/2017,https://github.com/digitalcrust/file-picker.git,,
Data Discovery Studio (CINERGI) metadata pipeline,Deployed application,Foundry,https://github.com/CINERGI/Foundry,EarthCube Data Discovery Studio (CINERGI),"Software for Pipeline processing of  ISO19139 metadata to run CINERGI enhancers, and load content to Elastic Search index; forked from . The system consists of a dispatcher, a consumer head and a CLI manager interface. The dispatcher listens to the MongoDB changes and using its configured workflow dispatches messages to the message queue for the listening consumer head(s). The consumer head coordinates a set of configured consumers that do a prefined operation of a document indicated by the message they receive from the dispatcher and ingestors. The ingestors are specialized consumers that are responsible for the retrieval of the original data as configured by harvest descriptor JSON file of the corresponding source. They are triggered by the manager application.  Java implementation, based on https://github.com/SciCrunch/Foundry. 0 Releases.","Burak Ozyurt, David Valentine, Adam Schachne",12/18/2019,https://github.com/CINERGI/Foundry.git,,
Data Discovery Studio (CINERGI) Dockerized  Foundry pipeline,Deployed application,foundry-docker,https://github.com/CINERGI/foundry-docker,EarthCube Data Discovery Studio (CINERGI),"This project bundles all prerequisites needed to run the foundry pipeline, management interface and web services interface in a Docker composition. The docker-compose.yml creates several containers.  Service dependencies ** Mongodb ** ServiceBus ** *GEOPORTAL one running Tomcat with the [geoportal-server-catalog] (https://github.com/Esri/geoportal-server-catalog) and the geoportal-harvester. The second container provides the Elasticsearch server for storing and indexing the data stored in the catalog server. 0 Releases.",David Valentine,1/27/2020,https://github.com/CINERGI/foundry-docker.git,,
GeoDeepDive Regex Library API,application,gddregexapi,https://github.com/EarthCubeGeochron/gddregexapi,EarthCube Geochron,"This API serves as an interface for a GeoDeepDive derivative database that helps manage and evaluate regular expressions and search terms that can be used by researchers to develop applications that can take advantage of the GeoDeepDive library and computational infrastructure.  The application is based on two components, a Postgres database and a node.js/express.js API that is served to the web. The API is primarily designed to be used by the GeoDeepDive Regex Library application, which is a single-page application deployed using Vue.js. 0 Releases.",Simon Goring,12/10/2018,https://github.com/EarthCubeGeochron/gddregexapi.git,,
GeoDeepDive regex database navigator,application,gddregexvueapp,https://github.com/EarthCubeGeochron/gddregexvueapp,EarthCube Geochron,"A Vue.js App to help users navigate the GDD regex database. The application is based on two other components, a Postgres database and a node.js/express.js API that is served to the web. The API is primarily designed to be used by the GeoDeepDive Regex Library application, which is a single-page application deployed using Vue.js. 0 Releases.",Simon Goring,12/10/2018,https://github.com/EarthCubeGeochron/gddregexvueapp.git,,
GeoDeepDive workflow-R,application,geodiveR,https://github.com/EarthCubeGeochron/geodiveR,EarthCube Geochron,An R package to manage many of the common workflow processes within a GeoDeepDive (https://geodeepdive.org/) workflow. 0 Releases. No Readme content.,"Simon Goring, Katrin Leinweber",2018-08-30T22:36:46Z,git://github.com/EarthCubeGeochron/geodiveR.git,,
Data Discovery Studio (CINERGI) User Interface,Deployed application,geoportal-server-catalog,https://github.com/CINERGI/geoportal-server-catalog,EarthCube Data Discovery Studio (CINERGI),"Forked from https://github.com/Esri/geoportal-server-catalog.  User interface for searching the CINERGI/Data Discovery Hub/Data Discovery Studio index of Earth Science data compiled for EarthCube. Backend is Elastic Search Index, loaded from ISO19139 XML metadata produced by the CINERGI Metadata Pipeline (https://github.com/CINERGI/Foundry).  Interface is customized from base ESRI/geoportal-server-catalog project, with various updates pushed back into the base project. Java Implementation, with XML configuration files.  2 Releases, from esri master.","David Valentine, Ilya Zaslavsky, Stephen Richard, plus 8 other community developers.",4/29/2019,https://github.com/CINERGI/geoportal-server-catalog.git,,
Geochemas.org web site,web site,geoschemas-org.github.io,https://github.com/geoschemas-org/geoschemas-org.github.io,EarthCube GeoCODES,"geoschemas.org website. Geoschemas.org is an evolution of the  p418 and 419 project work sponsored by the NCAR EarthCube Office to develop conventions for documenting EarthScience datasets using the schema.org vocabulary.  Geoschemas.org started as part of the NSF EarthCube initiative to mobilize NSF data facilities to publish self-describing information about their organization, services and data holdings. Website is at https://geoschemas.org/, not much content added. This activity has migrated to an ESIP sponsored activity, see https://github.com/ESIPFed/science-on-schema.org  for most current guidelines on publishing schema.org for describing a Data Repository or Dataset.  0 releases. No Readme content.",Adam Shepherd,2021-09-12T21:32:51Z,git://github.com/geoschemas-org/geoschemas-org.github.io.git,,
GeoCODES Gleaner,application,gleaner,https://github.com/gleanerio/gleaner,EarthCube GeoCODES,"Gleaner is a tool for working with structured data on the web to support geosciences.  Gleaner is the structured data on the web indexing tool developed as part of NSF EarthCube. Its focus is on collection JSON-LD encoding data graphs describing data resources and services. Gleaner can then process and generate a semantic network based on a list of providers.  The Summoner, which uses site map files to access and parse facility resources pages. Summoner places the results of these calls into a S3 API compliant storage. The Miller, which takes the JSON-LD documents pulled and stored by summoner and runs them through various millers. These millers can do various things. 7 Releases.","Doug Fils, Adam Shepherd, David Valentine",11/9/2021,https://github.com/gleanerio/gleaner.git,,
GeoLink Harvest System,application,glharvest,https://github.com/ec-geolink/glharvest,EarthCube GeoLink,"The GeoLink Harvest System (Harvester) retrieves RDF dumps of datasets from providers, imports them into its triple store in separate named graphs, and makes the combined set of named graphs available for further processing (i.e., co-reference resolution).  Each provider produces a dump of their data and makes it dumps available to the Harvester over publicly-accesible HTTP endpoints. Each provider also creates a VoID file containing RDF for a single void:Dataset and the Harvester uses this to programmatically harvest each of the provider's individual RDF data dumps. Python code. 0 Releases. ","Bryce Mecum, Matt Jones",1/4/2019,https://github.com/ec-geolink/glharvest.git,,
GeoLink Services,application,glservices,https://github.com/ec-geolink/glservices,EarthCube GeoLink,"Simple service API's for accessing the GeoLink triple store.  This is mostly a set of sandbox services to allow for further discussions with groups interested in exploring the use of GeoLink in thier efforts. 1 release.  Uses Javascript, GO, CSS",Doug Fils,8/21/2015,https://github.com/ec-geolink/glservices.git,,
Ensemble Toolkit for Earth Sciences workflows,application,hpc-workflows,https://github.com/radical-collaboration/hpc-workflows,EarthCube Ensemble Toolkit for Earth Sciences,"NSF16514 EarthCube Project - Award Number:1639694. create specialized computational tools that will enhance the ability of scientists to effectively and efficiently study natural hazards and renewable energy. The use of these tools will support novel methods and the use of powerful computing resources in ways that are not currently possible.   The Ensemble Toolkit will provide an important addition to the set ofcapabilities and tools that will enable the Earth Science community to use high-performance computing resources more efficiently, effectively and in an extensible fashion. This project represents the co-design of Ensemble Toolkit for Earth Sciences and is a collective effort of an interdisciplinary team of cyberinfrastructure and domain scientists. website: http://radical.rutgers.edu/projects/power_of_many.  0 Releases.","Weiming-Hu, Vivek Balasubramanian, Matteo Turilli, Shantenu Jha, Guido Cervone",2020-04-24T14:24:31Z,git://github.com/radical-collaboration/hpc-workflows.git,,
ICEBERG: Imagery Cyberinfrastructure and Extensible Building-Blocks to Enhance Research in the Geosciences,Specification development,ICEBERG-administration,https://github.com/iceberg-project/ICEBERG-administration,University of California-Santa Barbara,"Goal of project is to create cyberinfrastructure (CI) components that allow the geosciences community to exploit existing assets, and to establish a common workflow for reproducible imagery-enabled science using  an extensible system for coupling open-source image analysis tools with  high performance,  distributed computing (HPDC) for imagery-enabled geoscience research.  This repository contains agendas and notes for biweekly team meetings, as well as a set of software requirement specifications for several use cases releated to polar image analysis. specifications are in Adobe Acrobat and .tex format. ","Heather Lynch, bspitzbart, Ioannis Paraskevakos",7/2/2019,https://github.com/iceberg-project/ICEBERG-administration.git,,
2020 EarthCube Annual Meeting,Notebook,intake-pangeo-catalog-EarthCube-2020,https://github.com/andersy005/intake-pangeo-catalog-EarthCube-2020,Pangeo,"Intake / Pangeo Catalog: Making It Easier To Consume Earth’s Climate and Weather Data. Notebook submission for the 2020 EarthCube Annual Meeting. demonstrate the integration of data discovery tools such as intake and intake-esm (an intake plugin) with data stored in cloud optimized formats (zarr). We highlight (1) how these tools provide transparent access to local and remote catalogs and data, (2) the API for exploring arbitrary metadata associated with data, loading data sets into data array containers.  We also showcase the Pangeo catalog, an open source project to enumerate and organize cloud optimized climate data stored across a variety of providers, and a place where several intake-esm collections are now publicly available. We use one of these public collections as an example to show how an end user would explore and interact with the data, and conclude with a short overview of the catalog's online presence.","Anderson Banihirwe, Charles Blackmon-Luca, Ryan Abernathey, Joe Hamman",2020-06-12T17:24:23Z,git://github.com/andersy005/intake-pangeo-catalog-EarthCube-2020.git,,
GeoChron Ice Rafted Debris (IRD) Data Mining,application,IRDDive,https://github.com/EarthCubeGeochron/IRDDive,EarthCube Geochron,"get information about the spatiotemporal extent of IRD events over the last 5 million. The ultimate goal could be to make a series of maps with the publication date, publication, and latitude/longitude and timing of IRD events. use R and RStudio to do the data processing, GeoDeepDive to retreive documents of interest via string matching and to generate a subset of the output (for testing) as NLP output. 0 releases.","Jeremiah Marsicek, Simon Goring, Shan Ye, Katrin Leinweber",4/27/2020,https://github.com/EarthCubeGeochron/IRDDive.git,,
CHORDS,Notebook,JP_01_Real_Time_Alignment_and_Distribution_of_Weather_Radar_Data_with_Rain_Gauge_Data_for_Deep_Learn,https://github.com/jaypotnis/JP_01_Real_Time_Alignment_and_Distribution_of_Weather_Radar_Data_with_Rain_Gauge_Data_for_Deep_Learn,CHORDS,"Quantitative Precipitation Estimation (QPE) based on weather radar observations plays a significant role in the understanding of weather events, especially in real-time, where fast evolving phenomena like convective storm cells can be dangerous. We wish to demonstrate QPE using deep learning as an alternative approach to empirical relationship equations between rainfall rate and reflectivity which were developed in the past. QPE using radar reflectivity is one of the possible applications of deep learning in the weather radar field. Preprocessing this data and saving it in real-time on cloud would let the users skip the time-consuming preprocessing step and assist them to directly get to the deep learning phase. To train and test deep learning models with radar data, we must align rain gauge data in space and time. This data preprocessing requires time and resource consuming processes that involve downloading, extracting, gridding, aligning the radar data with respect to every gauge in the region. If this preprocessed dataset was readily available in real-time, deep learning can be easily performed on it by anyone without going through the heavy computations required in the process. EarthCube’s CHORDS tool is a real-time data service that can be used to store preprocessed data on cloud so that it can be accessed whenever and wherever required. In this work, we demonstrate the steps involved in preprocessing such as accessing WSR-88D radar and NASA-TRMM rain gauge data, Cartesian gridding of radar data, aligning the radar data with gauge data in real-time. This aligned data is stored on cloud using CHORDS, so that it can be readily available to users who wish to use it for deep learning. The notebook will also demonstrate the procedure for storing and retrieving the dataset from CHORDS server and an example of the deep learning process on the downloaded dataset.",Jay Potnis,2021-06-11T21:56:08Z,git://github.com/jaypotnis/JP_01_Real_Time_Alignment_and_Distribution_of_Weather_Radar_Data_with_Rain_Gauge_Data_for_Deep_Learn.git,,
Data Discovery Studio (CINERGI) Jupyter notebooks - using search results,Notebook,jupyter-cinergi,https://github.com/CINERGI/jupyter-cinergi,EarthCube Data Discovery Studio (CINERGI),Jupyter environment for Cinergi; iPython notebook. Set up for Workbench demonstration at EC annual meeting. 0 Releases. Various notebooks for parsing ISO metadata from Data Discovery Studio to develop technology to match data with applications,"Craig Willis, Stephen Richard, Ilya Zaslavsky, David Valentine",7/17/2018,https://github.com/CINERGI/jupyter-cinergi.git,,
LaserChron archive data upload,application,laserchron-uploader,https://github.com/EarthCubeGeochron/laserchron-uploader,EarthCube Geochron,Upload data to the LaserChron archive. Requires Python 3 (tested on Python 3.7).  It can be used for basic management of the LaserChron data S3 bucket. 0 Releases.,Daven Quinn,12/18/2019,https://github.com/EarthCubeGeochron/laserchron-uploader.git,,
Earth System Bridge MCM mapping tool,application,McMap,https://github.com/mprinc/McMap,EarthCube Earth System Bridge project,"EarthCube MCM Mapping tool, An interactive Modeler for the project Earth System Bridge.  Can't tell from repo content or links what the software does… 1 Release.","Sasha Rudan, sinisarudan",2019-04-05T14:15:28Z,git://github.com/mprinc/McMap.git,,
Data Discovery Studio (CINERGI) interface on MEAN stack,application,mean-cinergi,https://github.com/asonnenschein/mean-cinergi,EarthCube Data Discovery Studio (CINERGI),Web application which provides user and organizational management and controls in the form of command line tools and a graphical user interface to complement the CINERGI database and server ecosystem.  Base Dependencies: MongoDB v2.6.4; Node.js v0.10.29 64-bit; npmjs v1.4.16; bower v1.3.12; xml-to-cinergi v0.0.1-dev; Javascript. 0 Releases.,Adrian Sonnenschein,10/31/2014,https://github.com/asonnenschein/mean-cinergi.git,,
GeoCODES,application,mercantile,https://github.com/earthcubearchitecture-project418/mercantile,EarthCube Office,"Mercantile: An EarthCube Graph Server. A refactoring of interfaces (APIs) for EarthCube graph. This is a GraphQL server that connects into a defined RDF triple store.  It fronts a set of SPARQL calls to a data interface defined from the schema.org type Dataset ""class"" (ref: https://schema.org/Dataset).  This is a simple code gen build based on the 99 Designs gqlgen package (ref: https://github.com/99designs/gqlgen). This leverages the schema.org types as interface guidance. My desire is to use SHACL shape graphs for this. This has been done by TopQuadrant but is obviously closed source. ",Doug Fils,2020-10-12T14:35:19Z,git://github.com/earthcubearchitecture-project418/mercantile.git,,
What About model data RCN,web site,modeldatarcn.github.io,https://github.com/modeldatarcn/modeldatarcn.github.io,EarthCube RCN,"EarthCube RCN: “What About Model Data?”  Determining Best Practices for Archiving and Reproducibility Website. Goal: achieve open and reproducible workflows in geoscience modeling research. Two workshops planned summer 2020; The ultimate goal of these workshops is to provide model data best practices to the community, including scientific journal publishers, and funding agencies. Github repo is for web pages, workshop organization. 0 Releases. No Readme content.","Doug Schuster, schuster@ucar.edu",2021-08-18T21:29:50Z,git://github.com/modeldatarcn/modeldatarcn.github.io.git,,
Neotoma Paleoecology Database,,neotoma2,https://github.com/NeotomaDB/neotoma2,Neotoma Paleoecology Database,"Repository for the updated neotoma R package.  The neotoma2 package is built on the new Neotoma API and is intended as a starting point for a fully interactive experience with the Neotoma Paleoecology Database, to support both data access and data input through R.  The neotoma2 R package pulls data from the Neotoma Paleoecology Database. ","Simon Goring, Socorro Dominguez Vidana ",2021-11-15T16:49:36Z,git://github.com/NeotomaDB/neotoma2.git,,
GeoCODES iPython notebooks,Notebook,p418Notebooks,https://github.com/earthcubearchitecture-project418/p418Notebooks,EarthCube GeoCODES,Ipython notebooks and other interactive shell interfaces to Project 418 services.  Demonstrate spatial search and text search. 0 Releases. No Readme content.,"Doug Fils, Eric Lingerfelt",6/6/2018,https://github.com/earthcubearchitecture-project418/p418Notebooks.git,,
GeoCODES MATLAB notebooks,Notebook,p418NotebooksMATLAB,https://github.com/earthcubearchitecture-project418/p418NotebooksMATLAB,EarthCube GeoCODES,Notebooks in MATLAB using the Livescript language for P418 Access. 0 Releases. Demonstrate spatial search and text search. No Readme content.,"Kelly Luetkemeyer, Eric Lingerfelt",7/11/2018,https://github.com/earthcubearchitecture-project418/p418NotebooksMATLAB.git,,
GeoCODES R Markdown notebooks,Notebook,p418NotebooksR,https://github.com/earthcubearchitecture-project418/p418NotebooksR,EarthCube GeoCODES,Notebooks in the R language for P418 Access. Releases. Demonstrate spatial search and text search.  0 Releases. No Readme content.,Eric Lingerfelt,5/22/2018,https://github.com/earthcubearchitecture-project418/p418NotebooksR.git,,
GeoCODES DCAT Service Metadata conventions,Specification development,p419dcatservices,https://github.com/earthcubearchitecture-project418/p419dcatservices,EarthCube GeoCODES,"Development of approaches to encode information about  DCAT Dataservices for using in Schema.org JSON-LD in EarthCube registries.  Includes documentation, example instances encoded in JSON-LD. 0 Releases.","Adam Shepherd, Stephen Richard, Doug Fils",10/28/2019,https://github.com/earthcubearchitecture-project418/p419dcatservices.git,,
EarthCube Office,documentation,ProgramOfficeRoles,https://github.com/silky/ProgramOfficeRoles,EarthCube Office,These are the roles and accountabilities the staff have at EarthCube,Bruce Caron,2014-12-01T20:16:35Z,git://github.com/silky/ProgramOfficeRoles.git,,
Data Discovery Studio (CINERGI) Provenance API Server,application,PROVaaS,https://github.com/CINERGI/PROVaaS,EarthCube Data Discovery Studio (CINERGI),"The Provenance API Server for CINERGI. Python, with Docker scripts. 1 Release. No ReadMe.","Cristian Vlaescu, ci-dig, David Valentine, Tanu Malik",9/12/2016,https://github.com/CINERGI/PROVaaS.git,,
Ensemble Toolkit,application,radical.entk,https://github.com/radical-cybertools/radical.entk,EarthCube Ensemble Toolkit for Earth Sciences,The Ensemble Toolkit is a Python library for developing and executing large-scale ensemble-based workflows.. Documentation for toolkit: http://radicalentk.readthedocs.io/en/latest/.  Quick overview pdf: https://github.com/radical-collaboration/hpc-workflows/blob/master/docs/presentations/Ensemble%20Toolkit%20-%20Quick%20Overview.pdf.  Research in Advanced DIstributed Cyber- infrastructure and Applications Laboratory (RADICAL);  http://radical.rutgers.edu.  9 Releases.,"Andre Merzky,  Hyungro Lee, Mikhail Titov, Ioannis Paraskevakos",9/23/2021,https://github.com/radical-cybertools/radical.entk.git,,
Data Discovery Studio (CINERGI) metadata schema mapping ,schema mapping,schemamapping,https://github.com/CINERGI/schemamapping,EarthCube Data Discovery Studio (CINERGI),files for mapping from schema.org JSON-LD and qualified Dublin Core XML  into the ISO19139 XML metadata scheme for CINERGI pipeline. XSLT. 0 Releases.,"Stephen Richard, Katrin Leinweber ",8/8/2019,https://github.com/CINERGI/schemamapping.git,,
GeoCODES GUI server,application,server,https://github.com/earthcubearchitecture-project418gui/server,EarthCube GeoCODES,"Javascript, node.js application to validate JSON-LD docs describing EarthCube resources from GUI client; uses JSON schema documents for validation.  Demonstration deployed at https://earthcube.org/webapps/geocodes/registration/.   See project page at https://www.earthcube.org/p418gui. 0 Releases.","Eric Lingerfelt, Alex McNurlan, Maura Allen",9/3/2019,https://github.com/earthcubearchitecture-project418gui/server.git,,
Data Discovery Studio (CINERGI) Enhancer- Organization VIAF identifier,application,some_cinergi_enhancers,https://github.com/CINERGI/some_cinergi_enhancers,EarthCube Data Discovery Studio (CINERGI),"A low level API for an enhancer meant to work on CINERGI metadata objects (ISO19139 XML) to validate organizations by searching the organization names in the Virtual International Authority (VIAF) database of corporate names (http://viaf.org/), and adding VIAF identifiers to the metadata. 0 Releases","Burak Ozyurt, Raquel (Rocky)",4/30/2015,https://github.com/CINERGI/some_cinergi_enhancers.git,,
GeoChron Sparrow data system for geochemical labs,application,Sparrow,https://github.com/EarthCubeGeochron/Sparrow,EarthCube Geochron,"A software tool and schema+API spec for connecting laboratory measurements to data consumers. Sparrow is a small data system for geochronology and geochemical labs. It attempts to solve two problems at the boundary between labs and the community. Sparrow provides tools for labs to manage their data and its geological context. It also provides interfaces to allow third parties (community-level data archives or Earth models, for instance) to request data directly from the labs' computer systems. These automated links free the labs to focus on their science while providing a richer set of information to the community. Helps labs organize their data and provide it to community data systems. See https://sparrow-data.org for more information. 47 releases.  Other repos at https://github.com/EarthCubeGeochron for deployments at various labs. ","Daven Quinn, Ian Ross, Shan Ye, 
Casey Idzikowski, Ben Linzmeier ",11/4/2021,https://github.com/EarthCubeGeochron/Sparrow.git,, 
GeoChron Sparrow data system for geochemical labs,application,sparrow-uw-cosmo,https://github.com/EarthCubeGeochron/sparrow-uw-cosmo,EarthCube Geochron,Sparrow implementation for the UW Madison Cosmogenic Nuclides Lab,Shan Ye,9/20/2021,https://github.com/EarthCubeGeochron/sparrow-uw-cosmo.git,,
TAC presentation 2017,Presentation,tac_earthcube,https://github.com/SimonGoring/tac_earthcube,EarthCube Office,reveal.js presentation for EarthCube's Tech & Architecture Committee. This presentation uses reveal.js but includes original content generated by Simon Goring. It can be run simply by opening the index.html file. 0 Releases.,"Simon Goring, Adam Spiers, Hakim El Hattab",2017-10-05T05:20:25Z,git://github.com/SimonGoring/tac_earthcube.git,,
Throughput,template,Template,https://github.com/throughput-ec/Template,Throughput,A template for new repositories in the Throughput Project.,"Shane Loeffler, Simon Goring",5/20/2020,https://github.com/throughput-ec/Template.git,,
Throughput API,application,throughput_api,https://github.com/throughput-ec/throughput_api,EarthCube Throughput,"Annotation Engine neo4j API. An express/nodejs API application and skeleton. This application is designed to allow users to generate simple annotations of material using web-based resources based on the API protocols defined in the W3C standards.  Annotations are generated as conformant to W3C annotation standards, and implemented using Neo4J.  Requires Neo4J instance to be available. 0 Releases.",Simon Goring,10/4/2021,https://github.com/throughput-ec/throughput_api.git,,
Throughput,documentation,throughput_docs,https://github.com/throughput-ec/throughput_docs,,The documentation repository for Throughput.,"Simon Goring, michael lenard ",2021-11-03T01:17:03Z,git://github.com/throughput-ec/throughput_docs.git,,
Throughput Provenance server,application,throughput_prov,https://github.com/throughput-ec/throughput_prov,EarthCube Throughput,"Throughput update to the ESIP Labs Provisium code, and implementation of the W3C PROV-AQ note (https://provisium.io).  This a rewrite of the Provisium code started under ESIP (https://github.com/ESIPFed/provisium). It is dramatically different to apply lessons learned. It has been updated as part of EarthCube THROUGHPUT. 0 Releases.",Doug Fils,3/3/2019,https://github.com/throughput-ec/throughput_prov.git,,
Throughput viewer service,application,throughput_vue,https://github.com/throughput-ec/throughput_vue,EarthCube Throughput,"Single page application to serve basic Throughput services (direct annotation of a graph element). This application connects to the Throughput annotation graph database. The database itself uses a data model based on the W3C Annotation standard, although modified to fit the graph database model we have developed, and further modified for several use-cases to fit with unser interaction models. 0 Releases.",Simon Goring,9/22/2021,https://github.com/throughput-ec/throughput_vue.git,,
Throughput Annotation Database,application,throughputdb,https://github.com/throughput-ec/throughputdb,EarthCube Throughput,"The repository for the throughput Annotation Database. Cypher Queries & Case Studies. This repository contains the raw code for the neo4j Docker container, test data for populating the database, database scripts for the database schema and constraints, and helper cypher scripts.  This is a neo4j Annotation Engine designed to run in a docker container for deployment portability & to facilitate reproducibility among collaborators. The intention of this engine is to provide a platform for the credentialed crowd-sourcing of scientific records and publications without requiring underlying data resources to manage additional unstructured data. 0 Releases.",Simon Goring,10/20/2020,https://github.com/throughput-ec/throughputdb.git,,
Throughput,application; data,UnacquiredSites,https://github.com/throughput-ec/UnacquiredSites,EarthCube Throughput,"Retrieving site information from journal articles for domain data repositories, including the Neotoma Paleoecology Database (neotomadb.org). Project that creates a pipeline that uses GeoDeepDive's output to find Unaquired Sites for Neotoma. Using NLP parsed text and a Data Science approach, identify whether a paper is suitable for Neotoma and detect features such as 'Site Name', 'Location', 'Age Span' and 'Site Descriptions'.",Socorro Dominguez Vidana ,2021-01-20T04:39:58Z,git://github.com/throughput-ec/UnacquiredSites.git,,
Digital Crust S3 pipeline upload,application,upload-status,https://github.com/digitalcrust/upload-status,EarthCube Digital Crust,"Listens and publishes S3 file creations to the pipeline.  Pipeline was intended to extract data for loading into searchable database, and analyzing datatypes for semantic indexing.  DockerFiles, JARs, Gradle files. 0 Releases.","Jeff Allen, Derek J. Williams",9/8/2017,https://github.com/digitalcrust/upload-status.git,,
Earthcube Engagement Presentation URSI 2018,application; data,URSI-Engagement,https://github.com/ryangooch/URSI-Engagement,EarthCube Office,"Repository for Analysis for the Earthcube Engagement Presentation for URSI 2018. R code, CQL, and JSON. 0 Releases. No Readme content.","Ryan Gooch, Simon Goring",2018-01-02T21:16:59Z,git://github.com/ryangooch/URSI-Engagement.git,,
GeoCODES Web UI,web site,webUI2,https://github.com/earthcubearchitecture-project418/webUI2,EarthCube GeoCODES,"Web User Interface consisting of JQuery-based Components communicating with the Geodex web services. For GeoCODES demonstration; Docker files, JavaScript, CSS implementation. 0 Releases. No Readme content.",Eric Lingerfelt,3/29/2019,https://github.com/earthcubearchitecture-project418/webUI2.git,,
Data Discovery Studio (CINERGI)-XML sitemap generation,Notebook,xmlsitemap,https://github.com/CINERGI/xmlsitemap,EarthCube Data Discovery Studio (CINERGI),Tools for generating xml sitemap for CINERGI catalog; linked URLs will show html versions of ISO metadata records with schema.org Dataset markup included as a script. Implemented with iPython notebooks.  Also a notebook for analyzing dataset distribution information in ISO 19139 XML metadata. 0 Releases.,Stephen Richard,8/23/2019,https://github.com/CINERGI/xmlsitemap.git,,
