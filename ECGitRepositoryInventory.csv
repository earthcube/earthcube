ProjectName,Status,repositoryName,html_url,Organization,description,Participants,pushed_at,git_url
EarthCube Advancing netCDF-CF Project,Specification development,EC-netCDF-CF,https://github.com/Unidata/EC-netCDF-CF,EarthCube Advancing netCDF-CF for the Geoscience Community,"EarthCube: Advancing netCDF-CF Project. Project goal is to 1) increase the range of geoscience domains using netCDF-CF and active in the community; 2) extend the netCDF-CF standard to support data from a wider range of geoscience domains; and 3) Collaborate with other standards groups such as the OGC, ESIP, RDA, and NASA ESDS.  The project will gather scientific use-cases and example datasets to guide the drafting of documents detailing enhancements to the CF standard. Close collaboration with the existing netCDF-CF community and engagement with new geoscience domains as well as other standards groups will lead to strong community agreement around the proposed enhancements.  Repo contains proposals for CF conventions.  0 releases.","Aleksandar Jelenak, Ethan Davis, dasantek, Charlie Zender, Tim Whiteaker, Ryan May, Daniel Lee",6/19/2018,git://github.com/Unidata/EC-netCDF-CF.git
CHORDS application code,Deployed application,chords,https://github.com/earthcubeprojects-chords/chords,EarthCube CHORDS project,"EarthCube CHORDS application code. Website: http://chordsrt.com/. The CHORDS wiki (https://github.com/NCAR/chords_portal/wiki) has lots of nitty-gritty information.  Implemented with Ruby; also containerized distribution. 23 releases.  Contains code for  CHORDS Portal web application. Functionality: --A home page, with a logo and some areas for project definition and customization. --A query that can receive a tupple of data, and ingest it into the database. --A query that can return data from the database. --A webpage that can navigate and show data in a tabular form, and perhaps deliver a CSV file. --A webpage that provides a URL builder, than can be used immediately, and used as a template for client applications. --A webpage which provides a summary of the current data holdings and ingest activity.","Mike Daniels; code committers: Charlie Martin, Mike Dye, terrieyang, Aaron Zastruga, Sophia Chen, intRobyn",3/4/2020,git://github.com/earthcubeprojects-chords/chords.git
CHORDS project web documentation,documentation,chords-docs,https://github.com/earthcubeprojects-chords/chords-docs,EarthCube CHORDS project,"EarthCube CHORDS Web Documentation; The content explains what CHORDS is, how to use use it in new and advanced ways, answer as many user questions as possible, and post any exciting news. The website is published using GitHub Pages, and runs on the Jekyll framework, using the Jekyll Minimal Mistakes Theme. 0 Releases. Published documentation: https://earthcubeprojects-chords.github.io/chords-docs/",,2/25/2020,git://github.com/earthcubeprojects-chords/chords-docs.git
EarthCube CDF Registry Working Group,Specification development,CDFRegistryWG,https://github.com/fils/CDFRegistryWG,EarthCube Council of Data Facilities,"EarthCube CDF Registry Working Group on self hosted facility metadata via HTML5 microdata. Goals are to use existing vocabularies like schema.org and re3data terms to expose facility metadata using web architecture patterns, leverage HTML5 microdata publishing,  JSON-LD, and standard web architecture (hypermedia) to both expose and collect metadata.  0 Releases. Note: see https://github.com/ESIPFed/science-on-schema.org for current activity related to these objectives","Doug Fils, Adam Shepherd",4/23/2019,git://github.com/fils/CDFRegistryWG.git
CyberConnector project,Deployed application,cc,https://github.com/CSISS/cc,EarthCube CyberConnector,NSF EarthCube CyberConnector; NSF EarthCube Building Block project.  This project aims to connect the existing data sources to the Earth science models so the generation of modeling products could be more automatic and effortless. 31 Releases.  Documentation https://csiss.github.io/cc/.  Project web site http://cube.csiss.gmu.edu/CyberConnector,,3/30/2020,git://github.com/CSISS/cc.git
CyberConnector Simplified,application,cc-thredds-pycsw,https://github.com/CSISS/cc-thredds-pycsw,EarthCube CyberConnector,"Simplified CyberConnector/CyberWay repository for THREDDS, pycsw, docker system. 1 Release. No documentation",Juozas Gaigalas,5/23/2019,
CyberWay project,project management,CyberWay,https://github.com/CSISS/CyberWay,EarthCube CyberWay,"NSF EarthCube Funded Project. The aim is to connect Earth observations, polar science outcomes, and climate model outcomes via the EarthCube architecture. Project duration 10/1/2017-9/30/2019. Repo contains project meeting minutes, annual reports, Web site code(?), .war file for CyberWay.  0 Releases.  Project web site http://cube.csiss.gmu.edu/CyberWay","PI:  Dr. Liping Di;  Co-I: James Kinter,  David Bromwich, Eugene Yu;  Implementation Leader: Ziheng Sun; Organization participation:  GMU CSISS, COLA, OSU Byrd Center; Collaborators:  Michael D. Daniels (NCAR/EOL, Chords), Dr. Mohan Ramamurthy (Unidata, GeoWS)",3/12/2019,git://github.com/CSISS/CyberWay.git
Critical Zone Integrative Microbial Ecology Activity,documentation; notebooks,CZIMEA,https://github.com/BiG-CZ/CZIMEA,EarthCube CZIMEA Integrative activity,"CZIMEA: Critical Zone Integrative Microbial Ecology Activity. An EarthCube Integrative Activities project that's a BiG-CZ partner. Repo has links to project documents, and Jupyter notebook that loads sampling metadata into CZIMEA ODM2 database, using odm2api. Uses czimea_dataload.py module.  0 Releases. Project appears dormant.","Emilio Mayorga,  Landung Setiawan, Folker Meyer",4/6/2019,git://github.com/BiG-CZ/CZIMEA.git
Data Discovery Studio (CINERGI) Dockerized  Foundry pipeline,Deployed application,foundry-docker,https://github.com/CINERGI/foundry-docker,EarthCube Data Discovery Studio (CINERGI),"This project bundles all prerequisites needed to run the foundry pipeline, management interface and web services interface in a Docker composition. The docker-compose.yml creates several containers.  Service dependencies ** Mongodb ** ServiceBus ** *GEOPORTAL one running Tomcat with the [geoportal-server-catalog] (https://github.com/Esri/geoportal-server-catalog) and the geoportal-harvester. The second container provides the Elasticsearch server for storing and indexing the data stored in the catalog server. 0 Releases.",David Valentine,1/27/2020,
Data Discovery Studio (CINERGI) metadata pipeline,Deployed application,Foundry,https://github.com/CINERGI/Foundry,EarthCube Data Discovery Studio (CINERGI),"Software for Pipeline processing of  ISO19139 metadata to run CINERGI enhancers, and load content to Elastic Search index; forked from . The system consists of a dispatcher, a consumer head and a CLI manager interface. The dispatcher listens to the MongoDB changes and using its configured workflow dispatches messages to the message queue for the listening consumer head(s). The consumer head coordinates a set of configured consumers that do a prefined operation of a document indicated by the message they receive from the dispatcher and ingestors. The ingestors are specialized consumers that are responsible for the retrieval of the original data as configured by harvest descriptor JSON file of the corresponding source. They are triggered by the manager application.  Java implementation, based on https://github.com/SciCrunch/Foundry. 0 Releases.","Burak Ozyurt, David Valentine, Adam Schachne",12/18/2019,
Data Discovery Studio (CINERGI) Jupyter notebooks - using search results,Notebooks,jupyter-cinergi,https://github.com/CINERGI/jupyter-cinergi,EarthCube Data Discovery Studio (CINERGI),This repository contains Jupyter notebook files for use in linking CINERGI search results to notebook applications that can directly consume data from an online service or downloadable file.  Notebooks can be launched with myBinder.  0 Releases,"Stephen Richard, Ilya Zaslavsky, David Valentine, Craig Willis",11/18/2019,
Data Discovery Studio (CINERGI) Jupyter Notebooks-Dispatchers,Notebooks,cinergi_dispatch_dev,https://github.com/ShutongLi/cinergi_dispatch_dev,EarthCube Data Discovery Studio (CINERGI),Jupyter notebooks for identifying data distribution datatypes and dispatching data to a notebook to work with the data. Also files for mapping schema.org JSON-LD metdata to ISO19139. 0 Releases. No Readme.,"Shutong Li, Stephen Richard",11/17/2019,
Data Discovery Studio (CINERGI)-XML sitemap generation,Notebooks,xmlsitemap,https://github.com/CINERGI/xmlsitemap,EarthCube Data Discovery Studio (CINERGI),Tools for generating xml sitemap for CINERGI catalog; linked URLs will show html versions of ISO metadata records with schema.org Dataset markup included as a script. Implemented with iPython notebooks.  Also a notebook for analyzing dataset distribution information in ISO 19139 XML metadata. 0 Releases.,Stephen Richard,8/23/2019,
Data Discovery Studio (CINERGI) metadata schema mapping ,schema mapping,schemamapping,https://github.com/CINERGI/schemamapping,EarthCube Data Discovery Studio (CINERGI),files for mapping from schema.org JSON-LD and qualified Dublin Core XML  into the ISO19139 XML metadata scheme for CINERGI pipeline. XSLT. 0 Releases.,"Stephen Richard, Katrin Leinweber ",8/8/2019,
Data Discovery Studio (CINERGI) User Interface,Deployed application,geoportal-server-catalog,https://github.com/CINERGI/geoportal-server-catalog,EarthCube Data Discovery Studio (CINERGI),"Forked from https://github.com/Esri/geoportal-server-catalog.  User interface for searching the CINERGI/Data Discovery Hub/Data Discovery Studio index of Earth Science data compiled for EarthCube. Backend is Elastic Search Index, loaded from ISO19139 XML metadata produced by the CINERGI Metadata Pipeline (https://github.com/CINERGI/Foundry).  Interface is customized from base ESRI/geoportal-server-catalog project, with various updates pushed back into the base project. Java Implementation, with XML configuration files.  2 Releases, from esri master.","David Valentine, Ilya Zaslavsky, Stephen Richard, plus 8 other community developers.",4/29/2019,
Data Discovery Studio (CINERGI)-metadata enhancers,application template,cinergi-enhancers,https://github.com/CINERGI/cinergi-enhancers,EarthCube Data Discovery Studio (CINERGI),Starter project for developing enhancers for CINERGI Foundry pipeline system. 0 Releases. ,David Valentine,8/16/2018,
Data Discovery Studio (CINERGI) -Jupyter notebooks,Notebooks,jupyter-cinergi,https://github.com/nds-org/jupyter-cinergi,EarthCube Data Discovery Studio (CINERGI),Jupyter environment for Cinergi; iPython notebook. Set up for Workbench demonstration at EC annual meeting. 0 Releases.,Craig Willis,7/17/2018,
Data Discovery Studio (CINERGI) annotation tool,application,cinergi-annotator,https://github.com/CINERGI/cinergi-annotator,EarthCube Data Discovery Studio (CINERGI),This is a web based tool to edit/annotate CINERGI pipeline enhanced metadata records. Groovy/Grails. 0 Releases.,Burak Ozyurt,1/12/2017,
Data Discovery Studio (CINERGI) Provenance API Server,application,PROVaaS,https://github.com/CINERGI/PROVaaS,EarthCube Data Discovery Studio (CINERGI),"The Provenance API Server for CINERGI. Python, with Docker scripts. 1 Release. No ReadMe.","Cristian Vlaescu, ci-dig, David Valentine, Tanu Malik",9/12/2016,
Data Discovery Studio (CINERGI),application,CINERGIDataCuration,https://github.com/RockyCal/CINERGIDataCuration,EarthCube Data Discovery Studio (CINERGI),Validation tools for metadata to be harvested into CINERGI (Data Discovery Studio). 0 Releases. No Readme.,"Raquel (Rocky), eliu9, Anoushka Bose, Azfar Alam",5/18/2016,
Data Discovery Studio (CINERGI) Enhancer- Organization VIAF identifier,application,some_cinergi_enhancers,https://github.com/CINERGI/some_cinergi_enhancers,EarthCube Data Discovery Studio (CINERGI),"A low level API for an enhancer meant to work on CINERGI metadata objects (ISO19139 XML) to validate organizations by searching the organization names in the Virtual International Authority (VIAF) database of corporate names (http://viaf.org/), and adding VIAF identifiers to the metadata. 0 Releases","Burak Ozyurt, Raquel (Rocky)",4/30/2015,
Data Discovery Studio (CINERGI) Simulated pipeline output,testing,CINERGI-PROV,https://github.com/SciCrunch/CINERGI-PROV,EarthCube Data Discovery Studio (CINERGI),Simulated data from CINERGI pipeline and python clients to connect to the PROVaaS server. 0 Releases,"Tanu Malik, Pinkalicious",4/1/2015,
Data Discovery Studio (CINERGI) crawler,application,CINERGIWebCrawler,https://github.com/RockyCal/CINERGIWebCrawler,EarthCube Data Discovery Studio (CINERGI),"Crawler for the EarthCube - CINERGI project to crawl URLS.  This crawler/scraper is meant to gather metadata from earth science resources.  Dependencies are Python 3.4, and the following libraries: xml.etree.ElementTree, urllib.request, urllib.parse, re and bs4. Python code. 0 Releases.","Raquel (Rocky), Anoushka Bose, Nikov Nizh, Sigha (Github names….)",1/15/2015,git://github.com/RockyCal/CINERGIWebCrawler.git
Data Discovery Studio (CINERGI) interface on MEAN stack,application,mean-cinergi,https://github.com/asonnenschein/mean-cinergi,EarthCube Data Discovery Studio (CINERGI),Web application which provides user and organizational management and controls in the form of command line tools and a graphical user interface to complement the CINERGI database and server ecosystem.  Base Dependencies: MongoDB v2.6.4; Node.js v0.10.29 64-bit; npmjs v1.4.16; bower v1.3.12; xml-to-cinergi v0.0.1-dev; Javascript. 0 Releases.,Adrian Sonnenschein,10/31/2014,
Digital Crust S3 pipeline upload,application,upload-status,https://github.com/digitalcrust/upload-status,EarthCube Digital Crust,"Listens and publishes S3 file creations to the pipeline.  Pipeline was intended to extract data for loading into searchable database, and analyzing datatypes for semantic indexing.  DockerFiles, JARs, Gradle files. 0 Releases.","Jeff Allen, Derek J. Williams",9/8/2017,
Digital Crust ScienceBase file picker,application,file-picker,https://github.com/digitalcrust/file-picker,EarthCube Digital Crust,"Picks files from ScienceBase Catalog to move files to AWS S3,  send through a processing pipeline.  Built using example in redux docs: http://rackt.github.io/redux/docs/advanced/ExampleRedditAPI.html.  Project based on: https://github.com/gaearon/react-transform-boilerplate.  Javascript, Dockerfiles.  0 Releases.",Derek J. Williams,4/14/2017,
DRILSDOWN project,application,drilsdown,https://github.com/Unidata/drilsdown,EarthCube DRILSDOWN,"Drawing Rich Integrated Lat-lon- time Samples from Datasets Online into Working Notebooks. DRILSDOWN (Drawing Rich Integrated Lat-lon-time Subsets from Dataservers Online into Working Notebooks) is a project to facilitate access to detailed visualizations (in the Integrated Data Viewer, IDV) of Cases of Interest (user-defined) within a Python-based geo-space x time statistical data analyses -- if the data for such visulaizations are available online in nice aggregated repositories. 1 Release.  Python code, documentation. Documentation at https://unidata.github.io/drilsdown/.","Brian Mapes, Cece Hedrick, Suvarchal Kumar Cheedela, Jeff McWhirter, Yuan Ho",2/18/2020,
DRILSDOWN project B Mapes,Notebooks,EarthCube-DRILSDOWN,https://github.com/brianmapes/EarthCube-DRILSDOWN,EarthCube DRILSDOWN ,"Documentation at https://unidata.github.io/drilsdown/.  DRILSDOWN is a suite of software tools for geo-science (especially meteorology and oceanography). Our goal is to make 3D multi-variable visualization easier and more scientific, through: 1) Plugins, templates, and tools for The Integrated Data Viewer (IDV, an advanced Java application); 2) Jupyter notebook tools connecting The IDV to iPython (or to its own kernel), with ability to capture IDV images and animations, as well as full IDV states for replicability and ability to push and pull digital data between IDV and iPython; 3) RAMADDA repository tools for displaying and publishing DRILSDOWN Case Studies.   Repo contain iPython notebooks. Looks like this is a fork of the unidata repo, last merge was 2018-06-15 then superceded by https://github.com/Unidata/drilsdown. 0 Releases.","Brian Mapes, Suvarchal Kumar Cheedela",6/19/2018,git://github.com/brianmapes/EarthCube-DRILSDOWN.git
EarthCube Earth System Bridge MCM mapping tool,application,McMap,https://github.com/mprinc/McMap,EarthCube Earth System Bridge project,"EarthCube MCM Mapping tool, An interactive Modeler for the project Earth System Bridge.  Can't tell from repo content or links what the software does… 1 Release.","Sasha Rudan, sinisarudan",4/5/2019,git://github.com/mprinc/McMap.git
Enabling Scientific Collaboration project,project management,2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930,https://github.com/NCAR/2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930,EarthCube Enabling Collaboration,EarthCube Building Blocks Grant Enabling Scientific Collaboration NSF#1440293. See also: http://workspace.earthcube.org/enabling-scientific-collaboration-and-discovery-through-semantic-connections.  0 Releases.,"Ben gneissone, hudajkhan, kmaull-ucar, Matt Mayernik, C. Brooks Snyder, John J. Allison",7/12/2018,git://github.com/NCAR/2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930.git
Enabling Scientific Collaboration: UNAVCO VIVO project template,Deployed application,2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930-vivo-source,https://github.com/NCAR/2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930-vivo-source,EarthCube Enabling Collaboration project,"Three-tier build for EarthCollab VIVO. This is a git repository template for working with and customizing VIVO. It uses the three tiered build approach (https://wiki.duraspace.org/display/VIVO/Building+VIVO+in+3+tiers)  documented by the VIVO project. The project source files (VIVO and Vitro) are tracked using Git Submodules. For a more detailed explanation of setting up the VIVO environment, consult the VIVO version 1.8.1 installation instructions (https://wiki.duraspace.org/display/VIVO/Installing+VIVO+release+1.8.1).  Building VIVO from this template will add UNAVCO-specific customizations.  0 Releases.","Ben gneissone, Ted Lawless",7/25/2018,git://github.com/NCAR/2014-EarthCube-BuildingBlocks-EnablingCollaboration-14402930-vivo-source.git
Ensemble Toolkit,application,radical.entk,https://github.com/radical-cybertools/radical.entk,EarthCube Ensemble Toolkit for Earth Sciences,Documentation for toolkit: http://radicalentk.readthedocs.io/en/latest/.  Quick overview pdf: https://github.com/radical-collaboration/hpc-workflows/blob/master/docs/presentations/Ensemble%20Toolkit%20-%20Quick%20Overview.pdf.  Research in Advanced DIstributed Cyber- infrastructure and Applications Laboratory (RADICAL);  http://radical.rutgers.edu.  56 Releases.,main github committer: Vivek Balasubramanian (vivek.balasubramanian@rutgers.edu); 13 other committers,3/30/2020,
Ensemble Toolkit for Earth Sciences workflows,?,hpc-workflows,https://github.com/radical-collaboration/hpc-workflows,EarthCube Ensemble Toolkit for Earth Sciences,"NSF16514 EarthCube Project - Award Number:1639694. create specialized computational tools that will enhance the ability of scientists to effectively and efficiently study natural hazards and renewable energy. The use of these tools will support novel methods and the use of powerful computing resources in ways that are not currently possible.   The Ensemble Toolkit will provide an important addition to the set ofcapabilities and tools that will enable the Earth Science community to use high-performance computing resources more efficiently, effectively and in an extensible fashion. This project represents the co-design of Ensemble Toolkit for Earth Sciences and is a collective effort of an interdisciplinary team of cyberinfrastructure and domain scientists. website: http://radical.rutgers.edu/projects/power_of_many.  0 Releases.","Weiming-Hu, Vivek Balasubramanian, Matteo Turilli, Shantenu Jha, Guido Cervone",3/26/2020,git://github.com/radical-collaboration/hpc-workflows.git
Ensemble Toolkit (EnTK) experiments for IPDPS 2017,Notebooks,entk-experiments,https://github.com/radical-experiments/entk-experiments/,EarthCube Ensemble Toolkit for Earth Sciences,"This repository contains all the EnTK scripts + input data, notebooks, resulting plots. The raw data consisting of all the profiles are kept in the tarballs. All contents of this repository pertain to the work done for the IPDPS 2017 conference. 1 Release.",Vivek Balasubramanian (vivek.balasubramanian@rutgers.edu),12/21/2017,
GeoChron Ice Rafted Debris (IRD) Data Mining,application,IRDDive,https://github.com/EarthCubeGeochron/IRDDive,EarthCube Geochron,"get information about the spatiotemporal extent of IRD events over the last 5 million. The ultimate goal could be to make a series of maps with the publication date, publication, and latitude/longitude and timing of IRD events. use R and RStudio to do the data processing, GeoDeepDive to retreive documents of interest via string matching and to generate a subset of the output (for testing) as NLP output. 0 releases.","Jeremiah Marsicek, Simon Goring, Shan Ye, Katrin Leinweber",4/1/2020,
GeoChron Sparrow data system for geochemical labs,application,Sparrow,https://github.com/EarthCubeGeochron/Sparrow,EarthCube Geochron,A software tool and schema+API spec for connecting laboratory measurements to data consumers. Helps labs organize their data and provide it to community data systems. See https://sparrow-data.org for more information. 4 releases.  Other repos at https://github.com/EarthCubeGeochron for deployments at various labs. ,"Daven Quinn, Ian Ross, Shan Ye",4/1/2020,
LaserChron archive data upload,application,laserchron-uploader,https://github.com/EarthCubeGeochron/laserchron-uploader,EarthCube Geochron,Upload data to the LaserChron archive. Requires Python 3 (tested on Python 3.7).  It can be used for basic management of the LaserChron data S3 bucket. 0 Releases.,Daven Quinn,12/18/2019,
GeoDeepDive   regex database navigator,application,gddregexvueapp,https://github.com/EarthCubeGeochron/gddregexvueapp,EarthCube Geochron,"A Vue.js App to help users navigate the GDD regex database. The application is based on two other components, a Postgres database and a node.js/express.js API that is served to the web. The API is primarily designed to be used by the GeoDeepDive Regex Library application, which is a single-page application deployed using Vue.js. 0 Releases.",Simon Goring,12/10/2018,
GeoDeepDive Regex Library API,application,gddregexapi,https://github.com/EarthCubeGeochron/gddregexapi,EarthCube Geochron,"This API serves as an interface for a GeoDeepDive derivative database that helps manage and evaluate regular expressions and search terms that can be used by researchers to develop applications that can take advantage of the GeoDeepDive library and computational infrastructure.  The application is based on two components, a Postgres database and a node.js/express.js API that is served to the web. The API is primarily designed to be used by the GeoDeepDive Regex Library application, which is a single-page application deployed using Vue.js. 0 Releases.",Simon Goring,12/10/2018,
GeoDeepDive workflow-R,,geodiveR,https://github.com/EarthCubeGeochron/geodiveR,EarthCube Geochron,An R package to manage many of the common workflow processes within a GeoDeepDive (https://geodeepdive.org/) workflow. 0 Releases. No Readme content.,"Simon Goring, Katrin Leinweber",8/30/2018,git://github.com/EarthCubeGeochron/geodiveR.git
GeoCODES Fence,,Fence,https://github.com/earthcubearchitecture-project418/fence,EarthCube GeoCODES,"Fence is a tool designed to allow people to evaluate structured data graphs against various validations (such at the Tangram SHACL service), tools and interface components. It also provides links to the Google Structured Data Testing Tool and the JSON-LD Playground.  A set of web components are also loaded and attempt to parse the JSON-LD data graph to testing approaches to mapping, citation generation and other views into the data graph. This is done to provide examples of how providers can further leverage their data graphs in the generation of data set landing pages. 0 Releases.",Doug Fils,3/19/2020,
GeoCODES Gleaner harvest data graphs,,CDFSemanticNetwork,https://github.com/earthcubearchitecture-project418/CDFSemanticNetwork,EarthCube GeoCODES,A Semantic Network built from the structured data on the web offerings of the EarthCube CDF members; This repository is an experiment. It holds the output of GeoCODES Gleaner runs done on the various repositories that make up the EarthCube Council of Data Facilities (CDF). runs/CDFSemNetD1 and runs/CDFSemNetD2 hold gzipped archives of rdf triples (N3 encoding) for resources descriptions from harvested CDF repositories.  Other directories contains scripts for running the harvest processes with Gleaner. 0 Releases.,Doug Fils,1/27/2020,git://github.com/earthcubearchitecture-project418/CDFSemanticNetwork.git
EarthCube GeoCODES Gleaner,,gleaner,https://github.com/earthcubearchitecture-project418/gleaner,EarthCube GeoCODES,"Gleaner is a tool for working with structured data on the web to support geosciences.  Gleaner is the structured data on the web indexing tool developed as part of NSF EarthCube. Its focus is on collection JSON-LD encoding data graphs describing data resources and services. Gleaner can then process and generate a semantic network based on a list of providers.  The Summoner, which uses site map files to access and parse facility resources pages. Summoner places the results of these calls into a S3 API compliant storage. The Miller, which takes the JSON-LD documents pulled and stored by summoner and runs them through various millers. These millers can do various things. 7 Releases.","Doug Fils, Adam Shepherd, David Valentine",1/15/2020,
Geochemas.org web site,web site,geoschemas-org.github.io,https://github.com/geoschemas-org/geoschemas-org.github.io,EarthCube GeoCODES,"geoschemas.org website. Geoschemas.org is an evolution of the  p418 and 419 project work sponsored by the NCAR EarthCube Office to develop conventions for documenting EarthScience datasets using the schema.org vocabulary.  Geoschemas.org started as part of the NSF EarthCube initiative to mobilize NSF data facilities to publish self-describing information about their organization, services and data holdings. Website is at https://geoschemas.org/, not much content added. This activity has migrated to an ESIP sponsored activity, see https://github.com/ESIPFed/science-on-schema.org  for most current guidelines on publishing schema.org for describing a Data Repository or Dataset.  0 releases. No Readme content.",Adam Shepherd,1/13/2020,git://github.com/geoschemas-org/geoschemas-org.github.io.git
GeoCODES DCAT Service Metadata conventions,,p419dcatservices,https://github.com/earthcubearchitecture-project418/p419dcatservices,EarthCube GeoCODES,"Development of approaches to encode information about  DCAT Dataservices for using in Schema.org JSON-LD in EarthCube registries.  Includes documentation, example instances encoded in JSON-LD. 0 Releases.","Adam Shepherd, Stephen Richard, Doug Fils",10/28/2019,
GeoCODES Web UI,,webUI2,https://github.com/earthcubearchitecture-project418/webUI2,EarthCube GeoCODES,"Web User Interface consisting of JQuery-based Components communicating with the Geodex web services. For GeoCODES demonstration; Docker files, JavaScript, CSS implementation. 0 Releases. No Readme content.",Eric Lingerfelt,3/29/2019,
GeoCODES MATLAB notebooks,,p418NotebooksMATLAB,https://github.com/earthcubearchitecture-project418/p418NotebooksMATLAB,EarthCube GeoCODES,Notebooks in MATLAB using the Livescript language for P418 Access. 0 Releases. No Readme content.,"Kelly Luetkemeyer, Eric Lingerfelt",7/11/2018,
GeoCODES iPython notebooks,,p418Notebooks,https://github.com/earthcubearchitecture-project418/p418Notebooks,EarthCube GeoCODES,Ipython notebooks and other interactive shell interfaces to Project 418 services. 0 Releases. No Readme content.,"Doug Fils, Eric Lingerfelt",6/6/2018,
GeoCODES R Markdown notebooks,,p418NotebooksR,https://github.com/earthcubearchitecture-project418/p418NotebooksR,EarthCube GeoCODES,Notebooks in the R language for P418 Access. 0 Releases. No Readme content.,Eric Lingerfelt,5/22/2018,
GeoCODES GUI client,,client,https://github.com/earthcubearchitecture-project418gui/client,EarthCube GeoCODES,"Javascript, CSS code for web application to interact with GUI server for generating new JSON-LD documents using schema.org vocabulary to document EarthCube resources. Some documentation for installation at https://github.com/earthcubearchitecture-project418gui/documentation.  Application uses templates housed at https://github.com/earthcubearchitecture-project418gui/jsonld_templates. See project page at https://www.earthcube.org/p418gui. 0 Releases. No Readme.","Eric Lingerfelt, Alex McNurlan ",,
GeoCODES GUI server,,server,https://github.com/earthcubearchitecture-project418gui/server,EarthCube GeoCODES,"Javascript, node.js application to validate JSON-LD docs describing EarthCube resources from GUI client; uses JSON schema documents for validation.  Demonstration deployed at https://earthcube.org/webapps/geocodes/registration/.   See project page at https://www.earthcube.org/p418gui. 0 Releases.","Eric Lingerfelt, Alex McNurlan, Maura Allen",,
EarthCube office Trello scraper,,ecproject-trello-parser,https://github.com/earthcubearchitecture-ecprojects/ecproject-trello-parser,EarthCube office,"Programming and Database to harvest EC Project information from Trello. Implementation: php, data is in a JSON file. Code extracts content from JSON, and  executes a bunch of SQL to insert data into a database. 0 Releases. No Readme",Eric Lingerfelt,,
GeoLINK harvested DataONE Linked Open Data graph,,d1lod,https://github.com/ec-geolink/d1lod,EarthCube GeoLink,This repository contains a deployable service that continuously updates the DataOne Linked Open Data graph for its part as a provider of data for the GeoLink project. The service uses Docker Compose to manage a set of Docker containers that run the service. The service is intended to be deployed to a virtual machine and run with Docker Compose. 0 Releases.,"Bryce Mecum, Rushiraj Nenuji, Matt Jones",6/7/2019,
GeoLink Harvest System,,glharvest,https://github.com/ec-geolink/glharvest,EarthCube GeoLink,"The GeoLink Harvest System (Harvester) retrieves RDF dumps of datasets from providers, imports them into its triple store in separate named graphs, and makes the combined set of named graphs available for further processing (i.e., co-reference resolution).  Each provider produces a dump of their data and makes it dumps available to the Harvester over publicly-accesible HTTP endpoints. Each provider also creates a VoID file containing RDF for a single void:Dataset and the Harvester uses this to programmatically harvest each of the provider's individual RDF data dumps. Python code. 0 Releases. ","Bryce Mecum, Matt Jones",1/4/2019,
EarthCube GeoLink Design,,design,https://github.com/ec-geolink/design,EarthCube GeoLink,Design information about the EarthCube Geolink project.  See website at http://www.geolink.org/. 0 Releases. No Readme content.,"Adila Krisnadhi, Bryce Mecum, Adam Shepherd, Matt Jones, Peng Ji, Doug Fils, YingJie Hu, Tom Narok, Julie McMurry ",1/4/2018,git://github.com/ec-geolink/design.git
GeoLink Services,,glservices,https://github.com/ec-geolink/glservices,EarthCube GeoLink,"Simple service API's for accessing the GeoLink triple store.  This is mostly a set of sandbox services to allow for further discussions with groups interested in exploring the use of GeoLink in thier efforts. 1 release.  Uses Javascript, GO, CSS",Doug Fils,8/21/2015,
OceanLink project,,earthcube-EAGER,https://github.com/narock/earthcube-EAGER,EarthCube OceanLink,"Software associated with EarthCube EAGER project (OceanLink??). 	Working version of oceanlink pattern code. Java. 0 Releases. No Readme content.",Tom Narok,5/27/2014,git://github.com/narock/earthcube-EAGER.git
EarthCube Organization ,,earthcube,https://github.com/earthcube/earthcube,EarthCube Office,Top level repository for EC initiatives. 0 Releases. ,,3/19/2020,git://github.com/earthcube/earthcube.git
Earthcube resource registry ontology (ECCRO),,ecrro,https://github.com/earthcubearchitecture-ecresourcereg/ecrro,EarthCube Office,"EarthCube Resource Registry Ontology; This ontology defines classes for description of information resources documented in the EarthCube Resource Registry.  See https://www.earthcube.org/resource_registry for project information.  Ontology documentation provided by Widico at https://earthcubearchitecture-ecresourcereg.github.io/ecrro/index-en.html.  Includes directories with documentation, OWL encoding, and example instance documents. 2 Releases","Stephen Richard, Ruth Duerr, Ilya Zaslavsky",2/11/2020,git://github.com/earthcubearchitecture-ecresourcereg/ecrro.git
EarthCube Metrics presentation 2018,,ECAHM_Metrics,https://github.com/SimonGoring/ECAHM_Metrics,EarthCube Office,"A repository for the EarthCube All Hands Meeting Metrics Presentation; This repository contains a presenation, made using reveal.js for the EarthCube All Hands Meeting in Arlington, VA, June 2018. The presentation can be run using any browser, either by pointing the browser to goring.org, or by cloning the repository and opening the index.html file locally. 0 Releases",,10/11/2018,git://github.com/SimonGoring/ECAHM_Metrics.git
Earthcube Engagement Presentation URSI 2018,,URSI-Engagement,https://github.com/ryangooch/URSI-Engagement,EarthCube Office,"Repository for Analysis for the Earthcube Engagement Presentation for URSI 2018. R code, CQL, and JSON. 0 Releases. No Readme content.","Ryan Gooch, Simon Goring",1/2/2018,git://github.com/ryangooch/URSI-Engagement.git
EarthCube investigator networks,,EC_Network,https://github.com/SimonGoring/EC_Network,EarthCube Office,"Building a large network for EarthCube related proposals and all NSF grants using neo4j.  This repository is used to build and analyze a large graph database (using neo4j). The intent is to use this database for analysis to examine the impact of EarthCube on investigator networks. There are two components. One to build the database, and one to analyze the constructed database.   Docker, R Markdown, Cyverse, CQL. 0 Releases.",Simon Goring,12/20/2017,git://github.com/SimonGoring/EC_Network.git
TAC presentation 2017,,tac_earthcube,https://github.com/SimonGoring/tac_earthcube,EarthCube Office Simon Goring,reveal.js presentation for EarthCube's Tech & Architecture Committee. This presentation uses reveal.js but includes original content generated by Simon Goring. It can be run simply by opening the index.html file. 0 Releases.,Simon Goring,10/5/2017,git://github.com/SimonGoring/tac_earthcube.git
What About model data RCN,web site,modeldatarcn.github.io,https://github.com/modeldatarcn/modeldatarcn.github.io,EarthCube RCN,"EarthCube RCN: “What About Model Data?”  Determining Best Practices for Archiving and Reproducibility Website. Goal: achieve open and reproducible workflows in geoscience modeling research. Two workshops planned summer 2020; The ultimate goal of these workshops is to provide model data best practices to the community, including scientific journal publishers, and funding agencies. Github repo is for web pages, workshop organization. 0 Releases. No Readme content.","Doug Schuster, schuster@ucar.edu",3/20/2020,git://github.com/modeldatarcn/modeldatarcn.github.io.git
Throughput viewer service,,throughput_vue,https://github.com/throughput-ec/throughput_vue,EarthCube Throughput,"Single page application to serve basic Throughput services (direct annotation of a graph element). This application connects to the Throughput annotation graph database. The database itself uses a data model based on the W3C Annotation standard, although modified to fit the graph database model we have developed, and further modified for several use-cases to fit with unser interaction models. 0 Releases.",Simon Goring,3/24/2020,
Throughput API,,throughput_api,https://github.com/throughput-ec/throughput_api,EarthCube Throughput,"An express/nodejs API application and skeleton. This application is designed to allow users to generate simple annotations of material using web-based resources based on the API protocols defined in the W3C standards.  Annotations are generated as conformant to W3C annotation standards, and implemented using Neo4J.  Requires Neo4J instance to be available. 0 Releases.",Simon Goring,3/24/2020,
Throughput Annotation Database,,throughputdb,https://github.com/throughput-ec/throughputdb,EarthCube Throughput,"The repository for the throughput Annotation Database. Cypher Queries & Case Studies. This repository contains the raw code for the neo4j Docker container, test data for populating the database, database scripts for the database schema and constraints, and helper cypher scripts.  This is a neo4j Annotation Engine designed to run in a docker container for deployment portability & to facilitate reproducibility among collaborators. The intention of this engine is to provide a platform for the credentialed crowd-sourcing of scientific records and publications without requiring underlying data resources to manage additional unstructured data. 0 Releases.",Simon Goring,3/14/2020,
EarthCube Throughput Provenance server,,throughput_prov,https://github.com/throughput-ec/throughput_prov,EarthCube Throughput,"Throughput update to the ESIP Labs Provisium code, and implementation of the W3C PROV-AQ note (https://provisium.io).  This a rewrite of the Provisium code started under ESIP (https://github.com/ESIPFed/provisium). It is dramatically different to apply lessons learned. It has been updated as part of EarthCube THROUGHPUT. 0 Releases.",Doug Fils,3/3/2019,
NDS workbench Dockerfiles,,ndslabs-earthcube,https://github.com/nds-org/ndslabs-earthcube,National Data Service,Scratch space for the Labs Workbench EarthCube services; contains DockerFile and bash sh scripts.  [Looks like docker files for NDS workbench demo]. 0 releases. No Readme.,Mike Lambert,5/11/2017,git://github.com/nds-org/ndslabs-earthcube.git
